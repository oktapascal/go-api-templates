# Go Database Connection Example

This repository contains an example of a Go program that connects to a MySQL database using the `database/sql` package and the `github.com/spf13/viper` package for configuration management.

## Installation

To use this example, follow these steps:

1. Install Go: Download and install the latest version of Go from https://golang.org/dl/.

2. Clone the repository: Open a terminal or command prompt and run the following command to clone the repository:

```bash
git clone https://github.com/oktapascal/go-rentwheels.git
```

3. Change directory: Navigate to the cloned repository directory:

```bash
cd go-rentwheels
```

4. Install dependencies: Run the following command to install the required dependencies:

```bash
go get -u github.com/go-sql-driver/mysql
go get -u github.com/spf13/viper
```

## Configuration

1. Create a configuration file: Create a new file named `.env` in the root directory of the project.

2. Add the following content to the `.env` file:

```dotenv
  APP_NAME=RentWheelsApp
  APP_VERSION=1.0
  APP_PORT=Your App Port

  DB_HOST=Your Host
  DB_PORT=Your Port
  DB_USERNAME=Your Username
  DB_PASSWORD=Your Password
  DB_NAME=Your Database Name
```

Replace the placeholders with your actual database credentials.

## Usage

1. Build the program: Run the following command to build the program:

```bash
go build -o main main.go
```

2. Run the program: Execute the compiled binary:

```bash
./main
```

The program will establish a connection to the MySQL database using the provided configuration parameters and print a success message if the connection is established successfully.

## Documentation

The code includes documentation comments that explain the purpose, parameters, return values, and other relevant information of functions or methods.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
